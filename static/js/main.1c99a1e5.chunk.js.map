{"version":3,"sources":["components/AddForm/AddForm.jsx","components/urls.jsx","components/Subscriptions/Subscriptions.jsx","App.js","serviceWorker.js","store.js","index.js"],"names":["observer","productStore","urlInput","useRef","serverUrl","useState","displaySuccess","setDisplaySuccess","displayError","setDisplayError","handleUrlSubmit","event","a","preventDefault","console","log","current","value","Axios","method","url","data","email","productUrl","then","response","status","catch","error","get","params","length","setProductData","setLoading","setTimeout","className","class","onSubmit","for","ref","type","id","placeholder","role","deleteProduct","bargainId","delete","productData","loading","Container","Jumbotron","map","item","i","Toast","show","onClose","e","key","Header","href","rel","target","productTitle","textInput","style","padding","paddingTop","setEmail","handleEmailSubmit","Boolean","window","location","hostname","match","ProductStore","this","decorate","observable","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1c99a1e5.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './AddForm.css';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Axios from 'axios';\r\n\r\nfunction AddForm({ productStore }) {\r\n\tconst urlInput = useRef(null);\r\n\r\n\tconst serverUrl = 'https://x25iuvslok.execute-api.ap-south-1.amazonaws.com/dev/api/bargains';\r\n\r\n\tconst [ displaySuccess, setDisplaySuccess ] = useState(false);\r\n\tconst [ displayError, setDisplayError ] = useState(false);\r\n\r\n\tconst handleUrlSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log(urlInput.current.value);\r\n\t\tawait Axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: serverUrl,\r\n\r\n\t\t\tdata: {\r\n\t\t\t\temail: productStore.email,\r\n\t\t\t\tproductUrl: urlInput.current.value\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\turlInput.current.value = '';\r\n\t\t\t\t\tsetDisplaySuccess(true);\r\n\t\t\t\t\tsetDisplayError(false);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tsetDisplayError(true);\r\n\t\t\t\tsetDisplaySuccess(false);\r\n\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\tawait Axios.get(serverUrl, {\r\n\t\t\tparams: {\r\n\t\t\t\temail: productStore.email\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif (response.data.length !== 0) {\r\n\t\t\t\t\tproductStore.setProductData(response.data);\r\n\t\t\t\t\tproductStore.setLoading(true);\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(response.data.length);\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t\t.then(\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tconsole.log('This will run after 5 second!');\r\n\t\t\t\t\tsetDisplaySuccess(false);\r\n\t\t\t\t\tsetDisplayError(false);\r\n\t\t\t\t}, 5000)\r\n\t\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\" d-flex justify-content-center align-items-center container\">\r\n\t\t\t\t<form\r\n\t\t\t\t\tclass=\"form-inline justify-center\"\r\n\t\t\t\t\tonSubmit={(event) => {\r\n\t\t\t\t\t\thandleUrlSubmit(event);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<label class=\"sr-only\" for=\"inlineFormInputName2\">\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={urlInput}\r\n\t\t\t\t\t\ttype=\"url\"\r\n\t\t\t\t\t\tclass=\"form-control mb-2 mr-sm-2\"\r\n\t\t\t\t\t\tid=\"inlineFormInputName2\"\r\n\t\t\t\t\t\tplaceholder=\"Enter product url\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mb-2\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tclass={displaySuccess & (productStore.email !== '') ? 'alert alert-success' : 'alert-none'}\r\n\t\t\t\trole=\"alert\"\r\n\t\t\t>\r\n\t\t\t\t{displaySuccess & (productStore.email !== '') ? 'Product added successfully!' : ''}\r\n\t\t\t</div>\r\n\t\t\t<div class={displayError & (productStore.email !== '') ? 'alert alert-danger' : 'alert-none'} role=\"alert\">\r\n\t\t\t\t{displayError & (productStore.email !== '') ? (\r\n\t\t\t\t\t'Error! Only Amazon.in and Flipkart.com Urls are supported.'\r\n\t\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div class={displayError & (productStore.email === '') ? 'alert alert-danger' : 'alert-none'} role=\"alert\">\r\n\t\t\t\t{displayError & (productStore.email === '') ? 'Error! Please add email first.' : ''}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default observer(AddForm);\r\n","const serverUrl = 'https://x25iuvslok.execute-api.ap-south-1.amazonaws.com/dev/api/bargains';\r\n\r\nexport default serverUrl;\r\n","import React from 'react';\r\nimport './Subscriptions.css';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './Subscriptions.css';\r\nimport { observer } from 'mobx-react';\r\nimport Axios from 'axios';\r\nimport serverUrl from '../urls';\r\n\r\nconst Subscriptions = ({ productStore }) => {\r\n\tconst deleteProduct = async (bargainId) => {\r\n\t\tawait Axios.delete(`${serverUrl}/${bargainId}`);\r\n\t\tawait Axios.get(serverUrl, {\r\n\t\t\tparams: {\r\n\t\t\t\temail: productStore.email\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif (response.data.length !== 0) {\r\n\t\t\t\t\tproductStore.setProductData(response.data);\r\n\t\t\t\t\tproductStore.setLoading(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tproductStore.setLoading(true);\r\n\t\t\t\t\tproductStore.setProductData('');\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(response.data.length);\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t};\r\n\tconsole.log(productStore.productData === '');\r\n\r\n\tif (!productStore.loading) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tif (productStore.productData === '') {\r\n\t\treturn (\r\n\t\t\t<div class=\"alert alert-warning\" role=\"alert\">\r\n\t\t\t\tYou haven't added any products yet!\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Jumbotron>\r\n\t\t\t\t{productStore.productData.map((item, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Toast\r\n\t\t\t\t\t\t\tclassName=\"  d-flex justify-content-center align-items-center container\"\r\n\t\t\t\t\t\t\tshow={true}\r\n\t\t\t\t\t\t\tonClose={(e) => {\r\n\t\t\t\t\t\t\t\tdeleteProduct(item.bargainId);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t\t\t\t<a href={item.productUrl} rel=\"noopener noreferrer\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t<strong>{item.productTitle}</strong>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Toast.Header>\r\n\t\t\t\t\t\t</Toast>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Jumbotron>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default observer(Subscriptions);\r\n","import React, { useState, useRef } from 'react';\nimport AddForm from './components/AddForm/AddForm';\nimport Subscriptions from './components/Subscriptions/Subscriptions';\nimport './App.css';\nimport './components/AddForm/AddForm.css';\nimport Axios from 'axios';\nimport serverUrl from './components/urls';\nimport { observer } from 'mobx-react';\n\nfunction App({ productStore }) {\n\tconst textInput = useRef(null);\n\n\tconst handleEmailSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tproductStore.setEmail(textInput.current.value);\n\t\tAxios.get(serverUrl, {\n\t\t\tparams: {\n\t\t\t\temail: textInput.current.value\n\t\t\t}\n\t\t})\n\t\t\t.then(function(response) {\n\t\t\t\tif (response.data.length !== 0) {\n\t\t\t\t\tproductStore.setProductData(response.data);\n\t\t\t\t\tproductStore.setLoading(true);\n\t\t\t\t} else {\n\t\t\t\t\tproductStore.setLoading(true);\n\t\t\t\t}\n\t\t\t\tconsole.log(response.data.length);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1 style={{ padding: '2px' }}> Bargain </h1>\n\t\t\t<h3 style={{ padding: '2px' }}>\n\t\t\t\t<small class=\"text-muted\">Track prices and get alerts on your email</small>\n\t\t\t</h3>\n\t\t\t<div style={{ paddingTop: '20px' }} className=\"d-flex justify-content-center align-items-center container\">\n\t\t\t\t<form\n\t\t\t\t\tclass=\"form-inline justify-center\"\n\t\t\t\t\tonSubmit={(event) => {\n\t\t\t\t\t\thandleEmailSubmit(event);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ padding: '10px' }}\n\t\t\t\t>\n\t\t\t\t\t<label class=\"sr-only\" for=\"inlineFormInputName2\">\n\t\t\t\t\t\tName\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={textInput}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclass=\"form-control mb-2 mr-sm-2\"\n\t\t\t\t\t\tid=\"inlineFormInputName2\"\n\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mb-2\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<AddForm productStore={productStore} />\n\t\t\t<Subscriptions productStore={productStore} />\n\t\t</div>\n\t);\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { observable, action, decorate } from 'mobx';\r\n\r\nclass ProductStore {\r\n\tproductData = '';\r\n\temail = '';\r\n\tloading = false;\r\n\r\n\tsetProductData(productData) {\r\n\t\tthis.productData = productData;\r\n\t}\r\n\r\n\tsetEmail(email) {\r\n\t\tthis.email = email;\r\n\t}\r\n\tsetLoading(loading) {\r\n\t\tthis.loading = loading;\r\n\t}\r\n}\r\n\r\nProductStore = decorate(ProductStore, {\r\n\tproductData: observable,\r\n\temail: observable,\r\n\tloading: observable,\r\n\tsetLoading: action,\r\n\tsetProductData: action,\r\n\tsetEmail: action\r\n});\r\n\r\nexport { ProductStore };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ProductStore } from './store';\n\nconst productStore = new ProductStore();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App productStore={productStore} />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}